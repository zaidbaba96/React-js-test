{"version":3,"sources":["next/header/headerRowComp.tsx"],"names":[],"mappings":"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","file":"headerRowComp.js","sourcesContent":["import { AbstractHeaderCellCtrl, HeaderGroupCellCtrl, HeaderCellCtrl, HeaderFilterCellComp, HeaderFilterCellCtrl, HeaderRowCtrl, HeaderRowType, IHeaderRowComp, _ } from '@ag-grid-community/core';\nimport React, { memo, useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react';\nimport { BeansContext } from '../beansContext';\nimport HeaderCellComp from './headerCellComp';\nimport HeaderGroupCellComp from './headerGroupCellComp';\n\nconst HeaderRowComp = (props: {ctrl: HeaderRowCtrl}) => {\n\n    const {context, gridOptionsWrapper} = useContext(BeansContext);\n\n    const [ transform, setTransform ] = useState<string>();\n    const [ height, setHeight ] = useState<string>();\n    const [ top, setTop ] = useState<string>();\n    const [ width, setWidth ] = useState<string>();\n    const [ ariaRowIndex, setAriaRowIndex ] = useState<number>();\n    const [ cellCtrls, setCellCtrls ] = useState<AbstractHeaderCellCtrl[]>([]);\n\n    const eGui = useRef<HTMLDivElement>(null);\n\n    const { ctrl } = props;\n\n    const typeColumn = ctrl.getType() === HeaderRowType.COLUMN;\n    const typeGroup = ctrl.getType() === HeaderRowType.COLUMN_GROUP;\n    const typeFilter = ctrl.getType() === HeaderRowType.FLOATING_FILTER;\n\n    const jsFilterCells = useRef<{[id: string]: HeaderFilterCellComp}>({});\n\n    const setCellCtrlsMaintainOrder = useCallback( (prev: AbstractHeaderCellCtrl[], next: AbstractHeaderCellCtrl[]) => {\n\n        // if we are ensuring dom order, we set the ctrls into the dom in the same order they appear on screen\n        if (gridOptionsWrapper.isEnsureDomOrder()) {\n            return next;\n        }\n\n        // if not maintaining order, we want to keep the dom elements we have and add new ones to the end,\n        // otherwise we will loose transition effects as elements are placed in different dom locations\n        const prevMap = _.mapById(prev, c => c.getInstanceId());\n        const nextMap = _.mapById(next, c => c.getInstanceId());\n\n        const oldCtrlsWeAreKeeping = prev.filter( c => nextMap.has(c.getInstanceId()) );\n        const newCtrls = next.filter( c => !prevMap.has(c.getInstanceId()) )\n\n        return [...oldCtrlsWeAreKeeping, ...newCtrls];\n    }, []);\n\n    useEffect(() => {\n\n        const compProxy: IHeaderRowComp = {\n            setTransform: transform => setTransform(transform),\n            setHeight: height => setHeight(height),\n            setTop: top => setTop(top),\n            setHeaderCtrls: ctrls => setCellCtrls(prev => setCellCtrlsMaintainOrder(prev, ctrls)),\n            setWidth: width => setWidth(width),\n            setAriaRowIndex: rowIndex => setAriaRowIndex(rowIndex)\n        };\n\n        ctrl.setComp(compProxy);\n\n    }, []);\n\n    const destroyJsFilterComps = useCallback( (cellCtrls: AbstractHeaderCellCtrl[])=> {\n        cellCtrls.forEach( cellCtrl => {\n            const comp = jsFilterCells.current[cellCtrl.getInstanceId()];\n            if (comp) {\n                const compGui = comp.getGui();\n                context.destroyBean(comp);\n                if (compGui && compGui.parentElement) {\n                    compGui.parentElement.removeChild(compGui);\n                }\n            }\n        });\n    }, []);\n\n    // manage filter comps, which are still JS\n    typeFilter && useEffect( ()=> {\n        const oldCompsMap = jsFilterCells.current;\n        jsFilterCells.current = {};\n        const newCompsMap = jsFilterCells.current;\n        cellCtrls.forEach(cellCtrl => {\n            const id = cellCtrl.getInstanceId();\n            const existing = oldCompsMap[id];\n            delete oldCompsMap[id];\n            if (existing) {\n                newCompsMap[id] = existing;\n            } else {\n                const newComp = context.createBean(new HeaderFilterCellComp(cellCtrl as HeaderFilterCellCtrl))\n                eGui.current!.appendChild(newComp.getGui());\n            }\n        });\n        const oldComps = _.getAllValuesInObject(oldCompsMap);\n        destroyJsFilterComps(oldComps);\n    }, [cellCtrls]);\n\n    // when row comp is destroyed, make sure no child floating filters left\n    typeFilter && useEffect( ()=> {\n        const cellCtrls: AbstractHeaderCellCtrl[] = [];\n        _.getAllValuesInObject(jsFilterCells.current)\n            .forEach(comp => cellCtrls.push(comp.getCtrl()));\n        destroyJsFilterComps(cellCtrls);\n    }, []);\n\n    const style = useMemo( ()=> ({\n        transform: transform,\n        height: height,\n        top: top,\n        width: width\n    }), [transform, height, top, width]);\n\n    const className = useMemo( ()=> {\n        const res: string[] = [`ag-header-row`];\n        \n        typeColumn && res.push(`ag-header-row-column`);\n        typeGroup && res.push(`ag-header-row-column-group`);\n        typeFilter && res.push(`ag-header-row-column-filter`);\n\n        return res.join(' ');\n    }, []);\n\n    const createCellJsx = useCallback( (cellCtrl: AbstractHeaderCellCtrl) => {\n        switch (ctrl.getType()) {\n            case HeaderRowType.COLUMN_GROUP :\n                return <HeaderGroupCellComp ctrl={cellCtrl as HeaderGroupCellCtrl} key={cellCtrl.getInstanceId()} />;\n                \n            default :\n                return <HeaderCellComp ctrl={cellCtrl as HeaderCellCtrl} key={cellCtrl.getInstanceId()} />;\n        }\n    }, []);\n\n    // below, we are not doing floating filters, not yet\n    return (\n        <div ref={eGui} className={className} role=\"row\" style={style} aria-rowindex={ariaRowIndex}>\n            { !typeFilter && cellCtrls.map( createCellJsx ) }\n        </div>\n    );\n};\n\nexport default memo(HeaderRowComp);\n"]}