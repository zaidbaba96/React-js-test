{"version":3,"sources":["../../src/ts/headerRendering/cells/abstractCell/abstractHeaderCellComp.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,oDAA+E;AAC/E,wDAAuD;AACvD,oDAAqD;AAIrD;IAAuF,0CAAS;IAM5F,gCAAY,QAAgB,EAAE,IAAO;QAArC,YACI,kBAAM,QAAQ,CAAC,SAElB;QADG,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;;IACrB,CAAC;IAED,qGAAqG;IAC3F,2DAA0B,GAApC,UAAqC,CAAgB;QAC3C,IAAA,yCAAkE,EAAhE,kCAAc,EAAE,kBAAgD,CAAC;QAEzE,OAAO,+CAAoC,CACvC,IAAI,CAAC,kBAAkB,EACvB,CAAC,EACD,cAAc,EACd,MAAM,CACT,CAAC;IACN,CAAC;IAEM,wCAAO,GAAd;QACI,OAAO,IAAI,CAAC,IAAI,CAAC;IACrB,CAAC;IAvB0B;QAA1B,mBAAS,CAAC,cAAc,CAAC;gEAAsC;IAwBpE,6BAAC;CA1BD,AA0BC,CA1BsF,qBAAS,GA0B/F;AA1BqB,wDAAsB","file":"abstractHeaderCellComp.js","sourcesContent":["import { ColumnGroup } from \"../../../entities/columnGroup\";\nimport { Column } from \"../../../entities/column\";\nimport { isUserSuppressingHeaderKeyboardEvent } from \"../../../utils/keyboard\";\nimport { Component } from \"../../../widgets/component\";\nimport { Autowired } from \"../../../context/context\";\nimport { FocusService } from \"../../../focusService\";\nimport { AbstractHeaderCellCtrl } from \"./abstractHeaderCellCtrl\";\n\nexport abstract class AbstractHeaderCellComp<T extends AbstractHeaderCellCtrl> extends Component {\n\n    @Autowired('focusService') protected focusService: FocusService;\n\n    protected ctrl: T;\n\n    constructor(template: string, ctrl: T) {\n        super(template);\n        this.ctrl = ctrl;\n    }\n\n    /// temp - this is in the AbstractHeaderCellCtrl also, once all comps refactored, this can be removed\n    protected shouldStopEventPropagation(e: KeyboardEvent): boolean {\n        const { headerRowIndex, column } = this.focusService.getFocusedHeader()!;\n\n        return isUserSuppressingHeaderKeyboardEvent(\n            this.gridOptionsWrapper,\n            e,\n            headerRowIndex,\n            column\n        );\n    }\n\n    public getCtrl(): T {\n        return this.ctrl;\n    }\n}"]}