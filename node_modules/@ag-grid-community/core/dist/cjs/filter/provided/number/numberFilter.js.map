{"version":3,"sources":["../../src/ts/filter/provided/number/numberFilter.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,8EAAoE;AAEpE,gDAAsF;AACtF,gDAAgF;AAEhF,kDAAkD;AAClD,0CAAkD;AAElD,kDAAwE;AA6BxE;IAAkC,gCAAuC;IAmBrE;eACI,kBAAM,cAAc,CAAC;IACzB,CAAC;IAES,wCAAiB,GAA3B,UAA4B,WAA8B;QACtD,OAAO;YACH,IAAI,EAAE,WAAW,CAAC,MAAM;YACxB,EAAE,EAAE,WAAW,CAAC,QAAQ;SAC3B,CAAC;IACN,CAAC;IAES,2CAAoB,GAA9B;QACI,OAAO,GAAG,CAAC;IACf,CAAC;IAES,wCAAiB,GAA3B,UAA4B,MAAgB;QAA5C,iBAQC;QAPG,OAAO,iBAAM,iBAAiB,YAAC,MAAM,CAAC,CAAC,IAAI,CAAC;YACxC,IAAM,MAAM,GAAG,CAAC,KAAI,CAAC,WAAW,EAAE,KAAI,CAAC,WAAW,EAAE,KAAI,CAAC,SAAS,EAAE,KAAI,CAAC,SAAS,CAAC,CAAC;YAEpF,MAAM,CAAC,OAAO,CAAC,UAAA,KAAK,IAAI,OAAA,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE,MAAM,CAAC,EAA5B,CAA4B,CAAC,CAAC;YAEtD,KAAI,CAAC,gBAAgB,EAAE,CAAC;QAC5B,CAAC,CAAC,CAAC;IACP,CAAC;IAES,yCAAkB,GAA5B,UAA6B,KAAwB,EAAE,QAA2B;QAC9E,IAAM,WAAW,GAAG,QAAQ,KAAK,gCAAiB,CAAC,GAAG,CAAC;QACvD,IAAM,UAAU,GAAG,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC;QACrE,IAAM,QAAQ,GAAG,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC;QAE/D,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;QACxD,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;IAC5D,CAAC;IAES,iDAA0B,GAApC,UAAqC,KAAa;QAC9C,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACjC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAC9B,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAChC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IAClC,CAAC;IAES,iCAAU,GAApB;QACI,OAAO,UAAC,IAAY,EAAE,KAAa;YAC/B,IAAI,IAAI,KAAK,KAAK,EAAE;gBAAE,OAAO,CAAC,CAAC;aAAE;YAEjC,OAAO,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACjC,CAAC,CAAC;IACN,CAAC;IAES,gCAAS,GAAnB,UAAoB,MAA2B;QAC3C,IAAI,CAAC,kBAAkB,GAAG,MAAM,CAAC;QAEjC,IAAM,kBAAkB,GAAG,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAExD,IAAI,kBAAkB,EAAE;YACpB,IAAM,MAAM,GAAG,EAAE,kBAAkB,oBAAA,EAAE,CAAC;YAEtC,IAAI,CAAC,aAAa,CAAC;gBACf,WAAW,EAAE,MAAM;gBACnB,SAAS,EAAE,MAAM;gBACjB,WAAW,EAAE,MAAM;gBACnB,SAAS,EAAE,MAAM;aACpB,CAAC,CAAC;SACN;QAED,iBAAM,SAAS,YAAC,MAAM,CAAC,CAAC;QAExB,IAAI,CAAC,wBAAwB,EAAE,CAAC;IACpC,CAAC;IAEO,+CAAwB,GAAhC;QAAA,iBAOC;QANG,IAAM,QAAQ,GAAG,cAAM,OAAA,KAAI,CAAC,WAAW,EAAE,EAAlB,CAAkB,CAAC;QAE1C,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QACzC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QACvC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QACzC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;IAC3C,CAAC;IAEO,uCAAgB,GAAxB;QACI,IAAM,eAAe,GAAG,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,EAAE,CAAC;QACpE,IAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC;QAC5D,IAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC;QAE5D,IAAI,CAAC,WAAW,CAAC,mBAAmB,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;QAC9F,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAC9B,QAAQ;YACJ,CAAC,CAAC,eAAe,CAAC,qBAAqB,EAAE,mBAAmB,CAAC;YAC7D,CAAC,CAAC,eAAe,CAAC,iBAAiB,EAAE,cAAc,CAAC,CAC3D,CAAC;QAEF,IAAI,CAAC,SAAS,CAAC,mBAAmB,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,CAAC;QACjE,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,eAAe,CAAC,mBAAmB,EAAE,iBAAiB,CAAC,CAAC,CAAC;QAE1F,IAAI,CAAC,WAAW,CAAC,mBAAmB,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;QAC9F,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAC9B,QAAQ;YACJ,CAAC,CAAC,eAAe,CAAC,qBAAqB,EAAE,mBAAmB,CAAC;YAC7D,CAAC,CAAC,eAAe,CAAC,iBAAiB,EAAE,cAAc,CAAC,CAC3D,CAAC;QAEF,IAAI,CAAC,SAAS,CAAC,mBAAmB,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,CAAC;QACjE,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,eAAe,CAAC,mBAAmB,EAAE,iBAAiB,CAAC,CAAC,CAAC;IAC9F,CAAC;IAEM,uCAAgB,GAAvB,UAAwB,MAAgC;QACpD,iBAAM,gBAAgB,YAAC,MAAM,CAAC,CAAC;QAE/B,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAExB,IAAI,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE;YAClC,IAAI,CAAC,WAAW,CAAC,eAAe,EAAE,CAAC,KAAK,EAAE,CAAC;SAC9C;IACL,CAAC;IAES,8CAAuB,GAAjC;QACI,OAAO,YAAY,CAAC,sBAAsB,CAAC;IAC/C,CAAC;IAES,0CAAmB,GAA7B,UAA8B,QAA2B;QACrD,IAAM,GAAG,GAAG,QAAQ,KAAK,gCAAiB,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;QAC3D,IAAM,kBAAkB,GAAG,IAAI,CAAC,qBAAqB,EAAE,CAAC;QACxD,IAAM,YAAY,GAAG,kBAAkB,CAAC,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC,uBAAuB,CAAC;QAE1F,OAAO,UAAU,CAAA,iEACgC,GAAG,wDACzC,YAAY,mEAA2D,GAAG,aAAO,YAAY,4BAC7F,YAAY,+DAAuD,GAAG,aAAO,YAAY,0BACzF,CAAC;IAChB,CAAC;IAES,4CAAqB,GAA/B,UAAgC,QAA2B;QACvD,IAAM,WAAW,GAAG,QAAQ,KAAK,gCAAiB,CAAC,GAAG,CAAC;QACvD,IAAM,MAAM,GAAG,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAEjF,IAAI,MAAM,KAAK,2BAAY,CAAC,KAAK,EAAE;YAAE,OAAO,KAAK,CAAC;SAAE;QAEpD,IAAI,IAAI,CAAC,yBAAyB,CAAC,MAAM,CAAC,EAAE;YACxC,OAAO,IAAI,CAAC;SACf;QAED,IAAM,MAAM,GAAG,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC;QACjE,IAAM,QAAQ,GAAG,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC;QAC/D,IAAM,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;QAEpD,OAAO,KAAK,IAAI,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,IAAI,IAAI,CAAC,CAAC;IAC3G,CAAC;IAES,2CAAoB,GAA9B,UAA+B,OAA0B,EAAE,OAA0B;QACjF,OAAO,OAAO,CAAC,MAAM,KAAK,OAAO,CAAC,MAAM;eACjC,OAAO,CAAC,QAAQ,KAAK,OAAO,CAAC,QAAQ;eACrC,OAAO,CAAC,IAAI,KAAK,OAAO,CAAC,IAAI,CAAC;IACzC,CAAC;IAES,oCAAa,GAAvB;QACI,OAAO,QAAQ,CAAC;IACpB,CAAC;IAEO,oCAAa,GAArB,UAAsB,KAA8B;QAChD,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;YAC3B,OAAO,KAAK,CAAC;SAChB;QAED,IAAI,UAAU,GAAG,kBAAQ,CAAC,KAAK,CAAC,CAAC;QAEjC,IAAI,UAAU,IAAI,IAAI,IAAI,UAAU,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE;YAChD,UAAU,GAAG,IAAI,CAAC;SACrB;QAED,IAAI,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE;YACtC,OAAO,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;SAC3D;QAED,OAAO,UAAU,IAAI,IAAI,IAAI,UAAU,CAAC,IAAI,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;IAC3F,CAAC;IAES,sCAAe,GAAzB,UAA0B,QAA2B;QACjD,IAAM,WAAW,GAAG,QAAQ,KAAK,gCAAiB,CAAC,GAAG,CAAC;QACvD,IAAM,IAAI,GAAG,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAC/E,IAAM,MAAM,GAAG,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC;QACjE,IAAM,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;QAEpD,IAAM,KAAK,GAAsB;YAC7B,UAAU,EAAE,IAAI,CAAC,aAAa,EAAE;YAChC,IAAI,MAAA;SACP,CAAC;QAEF,IAAI,CAAC,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,EAAE;YACvC,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC;YAErB,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE;gBACxB,IAAM,QAAQ,GAAG,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC;gBAC/D,IAAM,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC;gBAExD,KAAK,CAAC,QAAQ,GAAG,OAAO,CAAC;aAC5B;SACJ;QAED,OAAO,KAAK,CAAC;IACjB,CAAC;IAES,yCAAkB,GAA5B;QACI,iBAAM,kBAAkB,WAAE,CAAC;QAE3B,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAExB,IAAM,cAAc,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAChD,IAAM,cAAc,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAEhD,kBAAY,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,EAAE,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC,CAAC;QAC5E,kBAAY,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,EAAE,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC,CAAC;QACxE,kBAAY,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,EAAE,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC,CAAC;QAC5E,kBAAY,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,EAAE,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC,CAAC;IAC5E,CAAC;IAEO,4CAAqB,GAA7B;QACY,IAAA,uEAAkB,CAAmC;QAE7D,IAAI,kBAAkB,EAAE;YACpB,OAAO,kBAAkB,CAAC;SAC7B;QAED,IAAI,CAAC,yBAAe,EAAE,IAAI,CAAC,uBAAa,EAAE,EAAE;YACxC,sGAAsG;YACtG,qBAAqB;YACrB,OAAO,WAAW,CAAC;SACtB;QAED,OAAO,IAAI,CAAC;IAChB,CAAC;IAvPa,mCAAsB,GAAG;QACnC,2BAAY,CAAC,MAAM;QACnB,2BAAY,CAAC,SAAS;QACtB,2BAAY,CAAC,SAAS;QACtB,2BAAY,CAAC,kBAAkB;QAC/B,2BAAY,CAAC,YAAY;QACzB,2BAAY,CAAC,qBAAqB;QAClC,2BAAY,CAAC,QAAQ;KACxB,CAAC;IAE0B;QAA3B,kCAAW,CAAC,aAAa,CAAC;qDAAgD;IACjD;QAAzB,kCAAW,CAAC,WAAW,CAAC;mDAA8C;IAE3C;QAA3B,kCAAW,CAAC,aAAa,CAAC;qDAAgD;IACjD;QAAzB,kCAAW,CAAC,WAAW,CAAC;mDAA8C;IA0O3E,mBAAC;CAzPD,AAyPC,CAzPiC,2BAAY,GAyP7C;AAzPY,oCAAY","file":"numberFilter.js","sourcesContent":["import { RefSelector } from '../../../widgets/componentAnnotations';\nimport { AgPromise } from '../../../utils';\nimport { SimpleFilter, ConditionPosition, ISimpleFilterModel } from '../simpleFilter';\nimport { ScalarFilter, Comparator, IScalarFilterParams } from '../scalarFilter';\nimport { IAfterGuiAttachedParams } from '../../../interfaces/iAfterGuiAttachedParams';\nimport { makeNull } from '../../../utils/generic';\nimport { setDisplayed } from '../../../utils/dom';\nimport { AgInputTextField } from '../../../widgets/agInputTextField';\nimport { isBrowserChrome, isBrowserEdge } from '../../../utils/browser';\n\nexport interface NumberFilterModel extends ISimpleFilterModel {\n    /** Filter type is always `'number'` */\n    filterType?: 'number';\n    /**\n     * The number value(s) associated with the filter.\n     * Custom filters can have no values (hence both are optional).\n     * Range filter has two values (from and to).\n     */\n    filter?: number | null;\n    /**\n     * Range filter `to` value.\n     */\n    filterTo?: number | null;\n}\n\nexport interface INumberFilterParams extends IScalarFilterParams {\n    /**\n     * When specified, the input field will be of type `text` instead of `number`, and this will be used as a regex of all the characters that are allowed to be typed.\n     * This will be compared against any typed character and prevent the character from appearing in the input if it does not match, in supported browsers (all except Safari).\n     */\n    allowedCharPattern?: string;\n    /**\n     * Typically used alongside `allowedCharPattern`, this provides a custom parser to convert the value entered in the filter inputs into a number that can be used for comparisons.\n     */\n    numberParser?: (text: string | null) => number;\n}\n\nexport class NumberFilter extends ScalarFilter<NumberFilterModel, number> {\n    public static DEFAULT_FILTER_OPTIONS = [\n        ScalarFilter.EQUALS,\n        ScalarFilter.NOT_EQUAL,\n        ScalarFilter.LESS_THAN,\n        ScalarFilter.LESS_THAN_OR_EQUAL,\n        ScalarFilter.GREATER_THAN,\n        ScalarFilter.GREATER_THAN_OR_EQUAL,\n        ScalarFilter.IN_RANGE\n    ];\n\n    @RefSelector('eValueFrom1') private readonly eValueFrom1: AgInputTextField;\n    @RefSelector('eValueTo1') private readonly eValueTo1: AgInputTextField;\n\n    @RefSelector('eValueFrom2') private readonly eValueFrom2: AgInputTextField;\n    @RefSelector('eValueTo2') private readonly eValueTo2: AgInputTextField;\n\n    private numberFilterParams: INumberFilterParams;\n\n    constructor() {\n        super('numberFilter');\n    }\n\n    protected mapRangeFromModel(filterModel: NumberFilterModel): { from: number | null | undefined, to: number | null | undefined; } {\n        return {\n            from: filterModel.filter,\n            to: filterModel.filterTo\n        };\n    }\n\n    protected getDefaultDebounceMs(): number {\n        return 500;\n    }\n\n    protected resetUiToDefaults(silent?: boolean): AgPromise<void> {\n        return super.resetUiToDefaults(silent).then(() => {\n            const fields = [this.eValueFrom1, this.eValueFrom2, this.eValueTo1, this.eValueTo2];\n\n            fields.forEach(field => field.setValue(null, silent));\n\n            this.resetPlaceholder();\n        });\n    }\n\n    protected setConditionIntoUi(model: NumberFilterModel, position: ConditionPosition): void {\n        const positionOne = position === ConditionPosition.One;\n        const eValueFrom = positionOne ? this.eValueFrom1 : this.eValueFrom2;\n        const eValueTo = positionOne ? this.eValueTo1 : this.eValueTo2;\n\n        eValueFrom.setValue(model ? ('' + model.filter) : null);\n        eValueTo.setValue(model ? ('' + model.filterTo) : null);\n    }\n\n    protected setValueFromFloatingFilter(value: string): void {\n        this.eValueFrom1.setValue(value);\n        this.eValueTo1.setValue(null);\n        this.eValueFrom2.setValue(null);\n        this.eValueTo2.setValue(null);\n    }\n\n    protected comparator(): Comparator<number> {\n        return (left: number, right: number): number => {\n            if (left === right) { return 0; }\n\n            return left < right ? 1 : -1;\n        };\n    }\n\n    protected setParams(params: INumberFilterParams): void {\n        this.numberFilterParams = params;\n\n        const allowedCharPattern = this.getAllowedCharPattern();\n\n        if (allowedCharPattern) {\n            const config = { allowedCharPattern };\n\n            this.resetTemplate({\n                eValueFrom1: config,\n                eValueTo1: config,\n                eValueFrom2: config,\n                eValueTo2: config,\n            });\n        }\n\n        super.setParams(params);\n\n        this.addValueChangedListeners();\n    }\n\n    private addValueChangedListeners(): void {\n        const listener = () => this.onUiChanged();\n\n        this.eValueFrom1.onValueChange(listener);\n        this.eValueTo1.onValueChange(listener);\n        this.eValueFrom2.onValueChange(listener);\n        this.eValueTo2.onValueChange(listener);\n    }\n\n    private resetPlaceholder(): void {\n        const globalTranslate = this.gridOptionsWrapper.getLocaleTextFunc();\n        const isRange1 = this.showValueTo(this.getCondition1Type());\n        const isRange2 = this.showValueTo(this.getCondition2Type());\n\n        this.eValueFrom1.setInputPlaceholder(this.translate(isRange1 ? 'inRangeStart' : 'filterOoo'));\n        this.eValueFrom1.setInputAriaLabel(\n            isRange1\n                ? globalTranslate('ariaFilterFromValue', 'Filter from value')\n                : globalTranslate('ariaFilterValue', 'Filter Value')\n        );\n\n        this.eValueTo1.setInputPlaceholder(this.translate('inRangeEnd'));\n        this.eValueTo1.setInputAriaLabel(globalTranslate('ariaFilterToValue', 'Filter to Value'));\n\n        this.eValueFrom2.setInputPlaceholder(this.translate(isRange2 ? 'inRangeStart' : 'filterOoo'));\n        this.eValueFrom2.setInputAriaLabel(\n            isRange2\n                ? globalTranslate('ariaFilterFromValue', 'Filter from value')\n                : globalTranslate('ariaFilterValue', 'Filter Value')\n        );\n\n        this.eValueTo2.setInputPlaceholder(this.translate('inRangeEnd'));\n        this.eValueTo2.setInputAriaLabel(globalTranslate('ariaFilterToValue', 'Filter to Value'));\n    }\n\n    public afterGuiAttached(params?: IAfterGuiAttachedParams): void {\n        super.afterGuiAttached(params);\n\n        this.resetPlaceholder();\n\n        if (!params || !params.suppressFocus) {\n            this.eValueFrom1.getInputElement().focus();\n        }\n    }\n\n    protected getDefaultFilterOptions(): string[] {\n        return NumberFilter.DEFAULT_FILTER_OPTIONS;\n    }\n\n    protected createValueTemplate(position: ConditionPosition): string {\n        const pos = position === ConditionPosition.One ? '1' : '2';\n        const allowedCharPattern = this.getAllowedCharPattern();\n        const agElementTag = allowedCharPattern ? 'ag-input-text-field' : 'ag-input-number-field';\n\n        return /* html */`\n            <div class=\"ag-filter-body\" ref=\"eCondition${pos}Body\" role=\"presentation\">\n                <${agElementTag} class=\"ag-filter-from ag-filter-filter\" ref=\"eValueFrom${pos}\"></${agElementTag}>\n                <${agElementTag} class=\"ag-filter-to ag-filter-filter\" ref=\"eValueTo${pos}\"></${agElementTag}>\n            </div>`;\n    }\n\n    protected isConditionUiComplete(position: ConditionPosition): boolean {\n        const positionOne = position === ConditionPosition.One;\n        const option = positionOne ? this.getCondition1Type() : this.getCondition2Type();\n\n        if (option === SimpleFilter.EMPTY) { return false; }\n\n        if (this.doesFilterHaveHiddenInput(option)) {\n            return true;\n        }\n\n        const eValue = positionOne ? this.eValueFrom1 : this.eValueFrom2;\n        const eValueTo = positionOne ? this.eValueTo1 : this.eValueTo2;\n        const value = this.stringToFloat(eValue.getValue());\n\n        return value != null && (!this.showValueTo(option) || this.stringToFloat(eValueTo.getValue()) != null);\n    }\n\n    protected areSimpleModelsEqual(aSimple: NumberFilterModel, bSimple: NumberFilterModel): boolean {\n        return aSimple.filter === bSimple.filter\n            && aSimple.filterTo === bSimple.filterTo\n            && aSimple.type === bSimple.type;\n    }\n\n    protected getFilterType(): 'number' {\n        return 'number';\n    }\n\n    private stringToFloat(value?: string | number | null): number | null {\n        if (typeof value === 'number') {\n            return value;\n        }\n\n        let filterText = makeNull(value);\n\n        if (filterText != null && filterText.trim() === '') {\n            filterText = null;\n        }\n\n        if (this.numberFilterParams.numberParser) {\n            return this.numberFilterParams.numberParser(filterText);\n        }\n\n        return filterText == null || filterText.trim() === '-' ? null : parseFloat(filterText);\n    }\n\n    protected createCondition(position: ConditionPosition): NumberFilterModel {\n        const positionOne = position === ConditionPosition.One;\n        const type = positionOne ? this.getCondition1Type() : this.getCondition2Type();\n        const eValue = positionOne ? this.eValueFrom1 : this.eValueFrom2;\n        const value = this.stringToFloat(eValue.getValue());\n\n        const model: NumberFilterModel = {\n            filterType: this.getFilterType(),\n            type\n        };\n\n        if (!this.doesFilterHaveHiddenInput(type)) {\n            model.filter = value;\n\n            if (this.showValueTo(type)) {\n                const eValueTo = positionOne ? this.eValueTo1 : this.eValueTo2;\n                const valueTo = this.stringToFloat(eValueTo.getValue());\n\n                model.filterTo = valueTo;\n            }\n        }\n\n        return model;\n    }\n\n    protected updateUiVisibility(): void {\n        super.updateUiVisibility();\n\n        this.resetPlaceholder();\n\n        const condition1Type = this.getCondition1Type();\n        const condition2Type = this.getCondition2Type();\n\n        setDisplayed(this.eValueFrom1.getGui(), this.showValueFrom(condition1Type));\n        setDisplayed(this.eValueTo1.getGui(), this.showValueTo(condition1Type));\n        setDisplayed(this.eValueFrom2.getGui(), this.showValueFrom(condition2Type));\n        setDisplayed(this.eValueTo2.getGui(), this.showValueTo(condition2Type));\n    }\n\n    private getAllowedCharPattern(): string | null {\n        const { allowedCharPattern } = this.numberFilterParams || {};\n\n        if (allowedCharPattern) {\n            return allowedCharPattern;\n        }\n\n        if (!isBrowserChrome() && !isBrowserEdge()) {\n            // only Chrome and Edge support the HTML5 number field, so for other browsers we provide an equivalent\n            // constraint instead\n            return '\\\\d\\\\-\\\\.';\n        }\n\n        return null;\n    }\n}\n"]}